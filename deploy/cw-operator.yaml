apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: percona-postgresql-operator
    app.kubernetes.io/name: percona-postgresql-operator
    app.kubernetes.io/part-of: percona-postgresql-operator
    pgv2.percona.com/control-plane: postgres-operator
  name: percona-postgresql-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/instance: percona-postgresql-operator
      app.kubernetes.io/name: percona-postgresql-operator
      app.kubernetes.io/part-of: percona-postgresql-operator
      pgv2.percona.com/control-plane: postgres-operator
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/instance: percona-postgresql-operator
        app.kubernetes.io/name: percona-postgresql-operator
        app.kubernetes.io/part-of: percona-postgresql-operator
        pgv2.percona.com/control-plane: postgres-operator
    spec:
      containers:
      - env:
        - name: PGO_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CRUNCHY_DEBUG
          value: "true"
        - name: DISABLE_TELEMETRY
          value: "false"
        image: perconalab/percona-postgresql-operator:main
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /metrics
            port: metrics
            scheme: HTTP
        name: operator
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      serviceAccountName: percona-postgresql-operator
