---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  name: perconapgrestores.pgv2.percona.com
spec:
  group: pgv2.percona.com
  names:
    kind: PerconaPGRestore
    listKind: PerconaPGRestoreList
    plural: perconapgrestores
    shortNames:
    - pg-restore
    singular: perconapgrestore
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster name
      jsonPath: .spec.pgCluster
      name: Cluster
      type: string
    - description: Job status
      jsonPath: .status.state
      name: Status
      type: string
    - description: Completed time
      jsonPath: .status.completed
      name: Completed
      type: date
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v2
    schema:
      openAPIV3Schema:
        description: PerconaPGRestore is the CRD that defines a Percona PostgreSQL
          Restore
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              containerOptions:
                properties:
                  env:
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: |-
                            Name of the environment variable.
                            May consist of any printable ASCII characters except '='.
                          type: string
                        value:
                          description: |-
                            Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in the container and
                            any service environment variables. If a variable cannot be resolved,
                            the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless of whether the variable
                            exists or not.
                            Defaults to "".
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            fieldRef:
                              description: |-
                                Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                              x-kubernetes-map-type: atomic
                            fileKeyRef:
                              description: |-
                                FileKeyRef selects a key of the env file.
                                Requires the EnvFiles feature gate to be enabled.
                              properties:
                                key:
                                  description: |-
                                    The key within the env file. An invalid key will prevent the pod from starting.
                                    The keys defined within a source may consist of any printable ASCII characters except '='.
                                    During Alpha stage of the EnvFiles feature gate, the key size is limited to 128 characters.
                                  type: string
                                optional:
                                  default: false
                                  description: |-
                                    Specify whether the file or its key must be defined. If the file or key
                                    does not exist, then the env var is not published.
                                    If optional is set to true and the specified key does not exist,
                                    the environment variable will not be set in the Pod's containers.

                                    If optional is set to false and the specified key does not exist,
                                    an error will be returned during Pod creation.
                                  type: boolean
                                path:
                                  description: |-
                                    The path within the volume from which to select the file.
                                    Must be relative and may not contain the '..' path or start with '..'.
                                  type: string
                                volumeName:
                                  description: The name of the volume mount containing
                                    the env file.
                                  type: string
                              required:
                              - key
                              - path
                              - volumeName
                              type: object
                              x-kubernetes-map-type: atomic
                            resourceFieldRef:
                              description: |-
                                Selects a resource of the container: only resources limits and requests
                                (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                              x-kubernetes-map-type: atomic
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  envFrom:
                    items:
                      description: EnvFromSource represents the source of a set of
                        ConfigMaps or Secrets
                      properties:
                        configMapRef:
                          description: The ConfigMap to select from
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the ConfigMap must be defined
                              type: boolean
                          type: object
                          x-kubernetes-map-type: atomic
                        prefix:
                          description: |-
                            Optional text to prepend to the name of each environment variable.
                            May consist of any printable ASCII characters except '='.
                          type: string
                        secretRef:
                          description: The Secret to select from
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret must be defined
                              type: boolean
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    type: array
                type: object
              options:
                description: |-
                  Command line options to include when running the pgBackRest restore command.
                  https://pgbackrest.org/command.html#command-restore
                items:
                  type: string
                type: array
              pgCluster:
                description: The name of the PerconaPGCluster to perform restore.
                type: string
              repoName:
                description: |-
                  The name of the pgBackRest repo within the source PostgresCluster that contains the backups
                  that should be utilized to perform a pgBackRest restore when initializing the data source
                  for the new PostgresCluster.
                pattern: ^repo[1-4]
                type: string
            required:
            - pgCluster
            - repoName
            type: object
          status:
            properties:
              completed:
                format: date-time
                type: string
              jobName:
                type: string
              state:
                type: string
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
