---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: perconapgbackups.pgv2.percona.com
spec:
  group: pgv2.percona.com
  names:
    kind: PerconaPGBackup
    listKind: PerconaPGBackupList
    plural: perconapgbackups
    shortNames:
    - pg-backup
    singular: perconapgbackup
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        description: PerconaPGBackup is the CRD that defines a Percona PostgreSQL
          Backup
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              options:
                description: Command line options to include when running the pgBackRest
                  backup command. https://pgbackrest.org/command.html#command-backup
                items:
                  type: string
                type: array
              pgCluster:
                type: string
              repoName:
                description: The name of the pgBackRest repo to run the backup command
                  against.
                pattern: ^repo[1-4]
                type: string
            required:
            - pgCluster
            - repoName
            type: object
          status:
            properties:
              completed:
                format: date-time
                type: string
              jobName:
                type: string
              state:
                type: string
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
