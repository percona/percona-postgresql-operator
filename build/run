#!/bin/bash

set -o errexit
set -o xtrace

build_dir="$(dirname $0)"
src_dir="$(realpath ${build_dir}/..)"
GIT_COMMIT=$(git rev-parse HEAD)
GIT_BRANCH=${VERSION:-$(git rev-parse --abbrev-ref HEAD | sed -e 's^/^-^g; s^[.]^-^g;' | sed -e 's/_/-/g' | tr '[:upper:]' '[:lower:]')}
IMAGE=${IMAGE:-"perconalab/percona-postgresql-operator:${GIT_BRANCH}"}
IMAGE=$(echo "$IMAGE" | sed -e 's#percona/#perconalab/#')
APPS_TO_BUILD=( 'pgo-apiserver' 'pgo-deployer' 'pgo-event' 'pgo-rmdata' 'pgo-scheduler' 'postgres-operator' )

build_image() {
    local app=${1}
    local tag=${2}

    export GO_LDFLAGS="-w -s -trimpath $GO_LDFLAGS"
    pushd ${src_dir}
        docker build \
            --build-arg GIT_COMMIT=$GIT_COMMIT \
            --build-arg GIT_BRANCH=$GIT_BRANCH \
            --build-arg GO_LDFLAGS="$GO_LDFLAGS" \
            --squash \
            --no-cache \
            -t "${tag}" -f build/${app}/Dockerfile .
    popd
    docker push "${tag}"
}

main() {
    until docker ps;
        do sleep 1;
    done

    export IMAGE

    for app in ${APPS_TO_BUILD[@]}; do
        set +x
        echo
        echo ": Building ${app} image"
        echo
        set -x

        if [[ "${app}" == "postgres-operator" ]]; then
            target_tag=${IMAGE}
        else
            target_tag="${IMAGE}-${app}"
        fi

        build_image ${app} ${target_tag}
    done
}

main