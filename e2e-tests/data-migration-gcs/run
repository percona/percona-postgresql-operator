#!/bin/bash

set -o errexit
set -o xtrace

test_dir=$(realpath $(dirname $0))
. ${test_dir}/../functions

function apply_configs {
	local cluster=${1}

	set +x
	yq w $test_dir/conf/backrest-repo-secret.yml 'metadata.name' "${cluster}-backrest-repo-config" \
		| yq w - 'data[gcs-key]' "$(yq r -d0 ${conf_dir}/cloud-secret-minio-gw.yml 'stringData."credentials.json"' | base64)" \
		| kubectl_bin apply -f -
	set -x

	yq r $test_dir/conf/custom-config.yml \
		| yq w - 'metadata.name' "${cluster}-custom-config" \
		| kubectl_bin apply -f -

	kubectl_bin apply \
		-f $conf_dir/client.yml
}

function create_pgo_k8s {
	local cluster_name="$(gcloud config get-value account | cut -d'@' -f1 | sed 's/\./\-/g')-pgo-upstream"
	export KUBECONFIG="/tmp/${cluster_name}"
	gcloud container clusters create --zone=europe-west3-b "${cluster_name}" --cluster-version=1.18 --machine-type=n1-standard-4 --preemptible --num-nodes=3 --no-enable-autoupgrade --quiet > /dev/null 2>&1
	unset KUBECONFIG
	echo "${cluster_name}"
}

function main {
	[[ -z ${PGO_K8S_NAME} ]] && pgo_k8s_name=$(create_pgo_k8s)

	export TARGET_CONFIG="/tmp/${pgo_k8s_name}"

	kubectl_bin create namespace pgo
	kubectl_bin config set-context $(kubectl_bin config current-context) --namespace="pgo"
	kubectl_bin apply -f https://raw.githubusercontent.com/CrunchyData/postgres-operator/v4.7.0/installers/kubectl/postgres-operator.yml
	wait_job_completion "pgo-deploy"
	wait_deployment "postgres-operator"
	PGO_HOME="$(mktemp -d)"
	curl https://raw.githubusercontent.com/CrunchyData/postgres-operator/v4.7.0/installers/kubectl/client-setup.sh | KUBECONFIG=${TARGET_CONFIG} HOME="${PGO_HOME}" bash -
	KUBECONFIG=${TARGET_CONFIG} kubectl port-forward svc/postgres-operator 8443:8443 &
	PROXY_PID=$!
	sleep 10
	set +x
	yq r -d0 ${conf_dir}/cloud-secret-minio-gw.yml 'stringData."credentials.json"' > ${PGO_HOME}/gcs-credentials.json
	set -x

	PATH="${PGO_HOME}/.pgo/pgo:$PATH" \
	PGOUSER="${PGO_HOME}/.pgo/pgo/pgouser" \
	PGO_CA_CERT="${PGO_HOME}/.pgo/pgo/client.crt" \
	PGO_CLIENT_CERT="${PGO_HOME}/.pgo/pgo/client.crt" \
	PGO_CLIENT_KEY="${PGO_HOME}/.pgo/pgo/client.key" \
	pgo create cluster some-name \
		--apiserver-url https://127.0.0.1:8443 \
		--namespace pgo \
		--password-superuser=postgres_pass \
		--password-replication=primaryuser_pass \
		--password=opensourcehippo \
		--pgbackrest-gcs-bucket "${BUCKET}" \
		--pgbackrest-gcs-key "${PGO_HOME}/gcs-credentials.json" \
		--pgbackrest-storage-type gcs

	kill ${PROXY_PID}

	unset TARGET_CONFIG

	create_namespace $namespace
	deploy_cert_manager
	deploy_operator

	desc 'create first PG cluster'
	cluster="some-name-${RANDOM}"

	apply_configs "${cluster}"
	spinup_pgcluster "${cluster}" "${src_dir}/deploy/cr.yaml" "gcs" "${cluster}-custom-config"

	apply_cluster ${src_dir}/deploy/cr.yaml ${cluster} gcs
# 	destroy ${namespace}
	# [[ -n ${pgo_k8s_name} ]] && gcloud container clusters delete --zone=europe-west3-b "${pgo_k8s_name}" --quiet
}

main
