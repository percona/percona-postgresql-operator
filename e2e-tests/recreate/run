#!/bin/bash

set -o errexit
set -o xtrace

test_dir=$(realpath $(dirname $0))
. ${test_dir}/../functions

create_namespace $namespace
deploy_operator

cluster="some-name"
kubectl_bin apply \
	-f $conf_dir/${cluster}-secrets.yml \
	-f $conf_dir/client.yml

spinup_pgcluster "${cluster}" "${src_dir}/deploy/cr.yaml"

desc 'enabling pgbouncer'

enable_pgBouncer ${cluster}

wait_deployment "${cluster}-pgbouncer"
compare_psql_cmd "show-1" 'SHOW DATABASES' "pgbouncer:pgbouncer_pass@${cluster}-pgbouncer.${namespace}"
compare_psql_cmd "select-1" '\c myapp \\\ SELECT * from myApp;' "some-name:some-name_pass@${cluster}-pgbouncer.${namespace}"

compare_kubectl "deployment/${cluster}-pgbouncer"
compare_kubectl "service/${cluster}-pgbouncer"

for i in $(seq 1 3); do
	create_replica "${cluster}" "${i}"
	wait_deployment "${cluster}-${i}"

	check_replica "${cluster}-${i}" "${cluster}" "select-1"
done

desc 'Restart the cluster'

kubectl_bin patch "pgcluster/${cluster}" --type json -p '[{"op":"add","path":"/spec/annotations/global/keep-data","value":"true"}]'
for i in $(seq 1 3); do
	wait_deployment "${cluster}-${i}"
done
wait_deployment "${cluster}"

kubectl_bin delete pgclusters --all
wait_for_delete "pgcluster/${cluster}"
wait_for_delete "deployment/${cluster}"
wait_for_delete "deployment/${cluster}-backrest-shared-repo"

compare_kubectl "pvc/${cluster}"
compare_kubectl "pvc/${cluster}-1"
compare_kubectl "pvc/${cluster}-2"
compare_kubectl "pvc/${cluster}-3"

kubectl_bin apply \
	-f $conf_dir/${cluster}-secrets.yml
apply_cluster ${src_dir}/deploy/cr.yaml ${cluster}
wait_cluster_consistency ${cluster}

compare_psql_cmd \
	"select-1" \
	'\c myapp \\\ SELECT * from myApp;' \
	"some-name:some-name_pass@${cluster}.${namespace}"

run_psql \
	'\c myapp \\\ INSERT INTO myApp (id) VALUES (100501)' \
	"postgres:postgres_pass@${cluster}.${namespace}"

for i in $(seq 1 3); do
	create_replica "${cluster}" "${i}"
	wait_deployment "${cluster}-${i}"

	check_replica "${cluster}-${i}" "${cluster}" "select-2"
done

destroy $namespace
