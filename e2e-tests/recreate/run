#!/bin/bash

set -o errexit
set -o xtrace

test_dir=$(realpath $(dirname $0))
. ${test_dir}/../functions

create_namespace $namespace
deploy_operator

cluster="some-name"
kubectl_bin apply \
	-f $conf_dir/${cluster}-secrets.yml \
	-f $conf_dir/client.yml

spinup_pgcluster "${cluster}" "${src_dir}/deploy/cr.yaml"

desc 'enabling pgbouncer'

enable_pgBouncer ${cluster}

wait_deployment "${cluster}-pgbouncer"
compare_psql_cmd "show-1" 'SHOW DATABASES' "pgbouncer:pgbouncer_pass@${cluster}-pgbouncer.${namespace}"
compare_psql_cmd "select-1" '\c myapp \\\ SELECT * from myApp;' "some-name:some-name_pass@${cluster}-pgbouncer.${namespace}"

compare_kubectl "deployment/${cluster}-pgbouncer"
compare_kubectl "service/${cluster}-pgbouncer"


for repl in $(seq 1 3); do
    desc "check replica ${repl}"
    kubectl_bin patch "perconapgcluster/some-name" --type json -p '[{"op": "replace", "path": "/spec/pgReplicas/hotStandby/size", "value": '${repl}'}]'
    sleep 30
	wait_deployment "${cluster}-repl${repl}"
	sleep 30
	check_replica "${cluster}-repl${repl}" "${cluster}" "select-1"
done

desc 'Restart the cluster'
kubectl_bin patch "perconapgcluster/${cluster}" --type json -p '[{"op":"add","path":"/spec/keepData","value":true}]'
sleep 30
for i in $(seq 1 3); do
    sleep 15
	wait_deployment "${cluster}-repl${i}"
done
wait_deployment "${cluster}"
sleep 30

kubectl_bin patch "perconapgcluster/some-name" --type json -p '[{"op": "replace", "path": "/spec/pgReplicas/hotStandby/size", "value": 2}]'
wait_for_delete "pgreplica/${cluster}-repl3"
sleep 30
kubectl_bin patch "perconapgcluster/some-name" --type json -p '[{"op": "replace", "path": "/spec/pgReplicas/hotStandby/size", "value": 1}]'
wait_for_delete "pgreplica/${cluster}-repl2"
sleep 30
kubectl_bin patch "perconapgcluster/some-name" --type json -p '[{"op": "replace", "path": "/spec/pgReplicas/hotStandby/size", "value": 0}]'
wait_for_delete "pgreplica/${cluster}-repl1"
sleep 30

kubectl_bin delete perconapgclusters --all
wait_for_delete "pgcluster/${cluster}"
wait_for_delete "deployment/${cluster}"
wait_for_delete "deployment/${cluster}-backrest-shared-repo"

compare_kubectl "pvc/${cluster}"
compare_kubectl "pvc/${cluster}-repl1"
compare_kubectl "pvc/${cluster}-repl2"
compare_kubectl "pvc/${cluster}-repl3"

sleep 30

kubectl_bin apply \
	-f $conf_dir/${cluster}-secrets.yml
apply_cluster "${src_dir}/deploy/cr.yaml" ${cluster}
wait_cluster_consistency ${cluster}
sleep 20
compare_psql_cmd \
	"select-1" \
	'\c myapp \\\ SELECT * from myApp;' \
	"some-name:some-name_pass@${cluster}.${namespace}"

run_psql \
	'\c myapp \\\ INSERT INTO myApp (id) VALUES (100501)' \
	"postgres:postgres_pass@${cluster}.${namespace}"

for r in $(seq 1 3); do
    kubectl_bin patch "perconapgcluster/some-name" --type json -p '[{"op": "replace", "path": "/spec/pgReplicas/hotStandby/size", "value": '${r}'}]'
	sleep 25
	wait_deployment "${cluster}-repl${r}"
    sleep 35
	check_replica "${cluster}-repl${r}" "${cluster}" "select-2"
done

destroy $namespace
