apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  generation: 2
  labels:
    name: some-name-required-backrest-shared-repo
    pg-cluster: some-name-required
    pgo-backrest-repo: "true"
    service-name: some-name-required-backrest-shared-repo
    vendor: crunchydata
  name: some-name-required-backrest-shared-repo
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: some-name-required-backrest-shared-repo
      pg-cluster: some-name-required
      pg-pod-anti-affinity: required
      pgo-backrest-repo: "true"
      service-name: some-name-required-backrest-shared-repo
      vendor: crunchydata
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: some-name-required-backrest-shared-repo
        pg-cluster: some-name-required
        pg-pod-anti-affinity: required
        pgo-backrest-repo: "true"
        service-name: some-name-required-backrest-shared-repo
        vendor: crunchydata
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: vendor
                    operator: In
                    values:
                      - crunchydata
                  - key: pg-pod-anti-affinity
                    operator: In
                    values:
                      - required
                      - require
                  - key: pg-cluster
                    operator: In
                    values:
                      - some-name-required
              topologyKey: kubernetes.io/hostname
      containers:
        - env:
            - name: MODE
              value: pgbackrest-repo
            - name: PGBACKREST_STANZA
              value: db
            - name: PGBACKREST_DB_PATH
              value: /pgdata/some-name-required
            - name: PGBACKREST_REPO1_PATH
              value: /backrestrepo/some-name-required-backrest-shared-repo
            - name: PGBACKREST_PG1_PORT
              value: "5432"
            - name: PGBACKREST_LOG_PATH
              value: /tmp
            - name: PGBACKREST_PG1_SOCKET_PATH
              value: /tmp
            - name: PGBACKREST_DB_HOST
              value: some-name-required
          imagePullPolicy: IfNotPresent
          name: database
          ports:
            - containerPort: 2022
              protocol: TCP
          resources:
            requests:
              memory: 48Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /sshd
              name: sshd
              readOnly: true
            - mountPath: /backrestrepo
              name: backrestrepo
            - mountPath: /etc/pgbackrest/conf.d
              name: pgbackrest-config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
      serviceAccount: pgo-default
      serviceAccountName: pgo-default
      terminationGracePeriodSeconds: 30
      volumes:
        - name: sshd
          secret:
            defaultMode: 420
            secretName: some-name-required-backrest-repo-config
        - name: backrestrepo
          persistentVolumeClaim:
            claimName: some-name-required-pgbr-repo
        - name: pgbackrest-config
          projected:
            defaultMode: 420
            sources:
              - configMap:
                  name: some-name-required-config-backrest
                  optional: true
              - secret:
                  name: some-name-required-config-backrest
                  optional: true
