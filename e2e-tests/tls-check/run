#!/bin/bash

set -o errexit
set -o xtrace

compare_psql() {
	local command_id="$1"
	local command="$2"
	local uri="$3"
	local sslmode="$4"

	local expected_result=${test_dir}/compare/${command_id}.sql

	run_psql_ssl "$command" "$uri" "postgres" "" "$sslmode" \
		>$tmp_dir/${command_id}.sql
	if [ ! -s "$tmp_dir/${command_id}.sql" ]; then
		sleep 20
		run_psql_ssl "$command" "$uri" "postgres" "" "$sslmode" \
			>$tmp_dir/${command_id}.sql
	fi
	diff -u $expected_result $tmp_dir/${command_id}.sql
}

run_psql_ssl() {
	local command="$1"
	local uri="$2"
	local driver=${3:-postgres}
	local suffix=${4:-.svc.cluster.local}
	local client_container=$(kubectl_bin get pods --selector=name=pg-client -o 'jsonpath={.items[].metadata.name}')
	local sslmode="$5"

	kubectl_bin exec ${client_container} -- \
		bash -c "printf '$command\n' | PGSSLMODE=$sslmode PGSSLROOTCERT=/tmp/tls/ca.crt psql -v ON_ERROR_STOP=1 -t -q $driver://$uri$suffix" || true
}

main() {
	test_dir=$(realpath $(dirname $0))
	. ${test_dir}/../functions

	create_namespace $namespace
	deploy_operator

	desc 'create first cluster'
	cluster="some-name"
	kubectl create secret generic cluster1-ssl-ca --from-file=ca.crt=${test_dir}/conf/ca.crt
	kubectl create secret tls cluster1-ssl-keypair --cert=${test_dir}/conf/server.crt --key=${test_dir}/conf/server.key
	kubectl_bin apply \
		-f $conf_dir/${cluster}-secrets.yml \
		-f ${test_dir}/conf/client.yml

	spinup_pgcluster "${cluster}" "${src_dir}/deploy/cr.yaml" "" "" "" "" "" "false"
	compare_psql "select-2" '\c myapp \\\ SELECT * from myApp;' "some-name:some-name_pass@${cluster}-pgbouncer.${namespace}" "verify-ca"

	kubectl_bin patch "perconapgcluster/${cluster}" --type json -p '[{"op":"add","path":"/spec/sslCA","value":"cluster1-ssl-ca"},{"op":"add","path":"/spec/sslSecretName","value":"cluster1-ssl-keypair"},{"op":"add","path":"/spec/sslReplicationSecretName","value":"cluster1-ssl-keypair"},{"op":"add","path":"/spec/tlsOnly","value":true}]'
	sleep 260
	wait_deployment "${cluster}-backrest-shared-repo"
	wait_deployment "${cluster}"

	compare_psql "select-1" '\c myapp \\\ SELECT * from myApp;' "some-name:some-name_pass@${cluster}-pgbouncer.${namespace}" "require"
	compare_psql "select-1" '\c myapp \\\ SELECT * from myApp;' "some-name:some-name_pass@${cluster}-pgbouncer.${namespace}" "verify-ca"
	compare_psql "select-2" '\c myapp \\\ SELECT * from myApp;' "some-name:some-name_pass@${cluster}-pgbouncer.${namespace}" "verify-full"

	kubectl_bin patch "perconapgcluster/${cluster}" --type json -p '[{"op":"add","path":"/spec/sslCA","value":""},{"op":"add","path":"/spec/sslSecretName","value":""},{"op":"add","path":"/spec/sslReplicationSecretName","value":""},{"op":"add","path":"/spec/tlsOnly","value":false}]'
	wait_deployment "${cluster}-backrest-shared-repo"
	wait_deployment "${cluster}"
	sleep 180
	compare_psql "select-2" '\c myapp \\\ SELECT * from myApp;' "some-name:some-name_pass@${cluster}-pgbouncer.${namespace}" "verify-ca"

	destroy $namespace
}

main