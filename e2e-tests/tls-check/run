#!/bin/bash

set -o errexit
set -o xtrace

main() {
	test_dir=$(realpath $(dirname $0))
	. ${test_dir}/../functions

	create_namespace $namespace
	deploy_operator

	desc 'create first cluster'
	cluster="some-name"
	kubectl create secret generic cluster1-ssl-ca --from-file=ca.crt=${conf_dir}/ca.crt
	kubectl create secret tls cluster1-ssl-keypair --cert=${conf_dir}/server.crt --key=${conf_dir}/server.key

	spinup_pgcluster "${cluster}" "${src_dir}/deploy/cr.yaml" "" "" "" "" "" "false" "${test_dir}/conf/client.yml"
	compare_psql "select-2" '\c myapp \\\ SELECT * from myApp;' "some-name:some-name_pass@${cluster}-pgbouncer" "verify-ca"

	kubectl_bin patch "perconapgcluster/${cluster}" --type json -p '[{"op":"add","path":"/spec/sslCA","value":"cluster1-ssl-ca"},{"op":"add","path":"/spec/sslSecretName","value":"cluster1-ssl-keypair"},{"op":"add","path":"/spec/sslReplicationSecretName","value":"cluster1-ssl-keypair"},{"op":"add","path":"/spec/tlsOnly","value":true}]'
	sleep 260
	wait_deployment "${cluster}-backrest-shared-repo"
	wait_deployment "${cluster}"

	compare_psql "select-1" '\c myapp \\\ SELECT * from myApp;' "some-name:some-name_pass@${cluster}-pgbouncer" "require"
	compare_psql "select-1" '\c myapp \\\ SELECT * from myApp;' "some-name:some-name_pass@${cluster}-pgbouncer" "verify-ca"
	compare_psql "select-3" '\c myapp \\\ SELECT * from myApp;' "some-name:some-name_pass@${cluster}-pgbouncer" "verify-full"

	kubectl_bin patch "perconapgcluster/${cluster}" --type json -p '[{"op":"add","path":"/spec/sslCA","value":""},{"op":"add","path":"/spec/sslSecretName","value":""},{"op":"add","path":"/spec/sslReplicationSecretName","value":""},{"op":"add","path":"/spec/tlsOnly","value":false}]'
	wait_deployment "${cluster}-backrest-shared-repo"
	wait_deployment "${cluster}"
	sleep 180
	compare_psql "select-2" '\c myapp \\\ SELECT * from myApp;' "some-name:some-name_pass@${cluster}-pgbouncer" "verify-ca"

	destroy $namespace
}

main
